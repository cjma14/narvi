---
import TestimonialItem from "./TestimonialItem.astro";
import StatsGrid from "../../ui/blocks/StatsGrid.astro";

const {
  title,
  subTitle,
  testimonials,
  label
} = Astro.props;

interface Props {
  label: string;
  title: string;
  subTitle?: string;
  testimonials?: Testimonial[];
  statistics?: StatProps[];
}

// TypeScript type for testimonials
type Testimonial = {
  content: string;
  author: string;
  role: string;
  avatarSrc: string;
};

// TypeScript type for stats.
type StatProps = {
  count: string;
  description: string;
};
---

<section
  class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full text-pearl-100 mb-20"
>
  <!-- Container for the testimonials -->
  <div
    class="lg:grid lg:grid-cols-1 lg:items-center lg:justify-between lg:gap-5"
  >
    <div class="">
      <!-- Title and Subtitle -->

      <div class="flex items-center gap-3 mb-4">
        <span class="flex bg-primary-500 h-[10px] w-[10px] rounded-full"></span>
        <h3 class="text-pearl-100">{label}</h3>
      </div>

      <div class="mb-8">
        <h2
          class="mb-2 text-3xl font-bold  lg:text-4xl"
        >
          {title}
        </h2>
        {subTitle &&
        <p class="">
          {subTitle}
        </p>
      }
      </div>
    </div>

     <!-- Generate a blockquote for each testimonial in the testimonials array by mapping over the array. -->

     <div class="swiper swiperTestimonial h-full w-full">
      <div class="swiper-wrapper">
        { testimonials.map((testimonial) => (

          <div class="swiper-slide">
            <TestimonialItem content={testimonial.content} author={testimonial.author} role={testimonial.role} avatarSrc={testimonial.avatarSrc} />
          </div>
        
        ))}
      </div>
      <div class="swiper-button-prev"></div>
      <div class="swiper-button-next"></div>
    </div>
  </div>
</section>

<style>
  .swiper-pagination {
    position: absolute !important;
  }

  .swiper-slide {
    display: flex !important;
    justify-content: center;
    background-color: #244840;
    border-radius: 10px;
    padding: 5rem;
  }
  .swiper-button-prev {
    left: 45px;
  }
  .swiper-button-next {
    right: 45px;
  }

  @media screen and (max-width: 480px) {
    .swiper-pagination {
      position: relative !important;
      margin-top: 25px;
    }

    .swiper-slide {
      padding: 2rem;
    }

    .swiper-button-prev, .swiper-button-next {
      display: none;
    }
  }

 
</style>

<script>
  import Swiper from "swiper";
  import "swiper/css";
  import "swiper/css/pagination";
  import "swiper/css/navigation";
  import { Pagination, Autoplay, Navigation } from "swiper/modules";

  var swiper = new Swiper(".swiperTestimonial", {
      modules: [Pagination, Navigation, Autoplay],
      slidesPerView: 1,
      spaceBetween: 30,
      loop: true,
    
      autoplay: {
          delay: 10000
      },
      pagination: {
          el: ".swiper-pagination",
          clickable: true,
      },
      navigation: {          // definir botones next y prev para el m√≥dulo Navigation
        prevEl: ".swiper-button-prev",
        nextEl: ".swiper-button-next",
      }
  });
</script>
